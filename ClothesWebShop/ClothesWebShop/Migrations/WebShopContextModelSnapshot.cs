// <auto-generated />
using System;
using ClothesWebShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClothesWebShop.Migrations
{
    [DbContext(typeof(WebShopContext))]
    partial class WebShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClothesWebShop.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMainAddress")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Split",
                            ContactNumber = "0995556666",
                            Country = "Croatia",
                            IsMainAddress = true,
                            Name = "Tolstojeva",
                            Number = 43,
                            PostalCode = "21000",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            City = "Zagreb",
                            ContactNumber = "0998887776",
                            Country = "Croatia",
                            IsMainAddress = false,
                            Name = "Busiceva",
                            Number = 22,
                            PostalCode = "10000",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            City = "Split",
                            ContactNumber = "0995556666",
                            Country = "Croatia",
                            IsMainAddress = false,
                            Name = "Tolstojeva",
                            Number = 2,
                            PostalCode = "21000",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            City = "Zagreb",
                            ContactNumber = "0998887776",
                            Country = "Croatia",
                            IsMainAddress = false,
                            Name = "Busiceva",
                            Number = 1,
                            PostalCode = "10000",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SaleReduction")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountAvailable = 5,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 3
                        },
                        new
                        {
                            Id = 2,
                            AmountAvailable = 5,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 1
                        },
                        new
                        {
                            Id = 3,
                            AmountAvailable = 10,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 4
                        },
                        new
                        {
                            Id = 4,
                            AmountAvailable = 10,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 4
                        },
                        new
                        {
                            Id = 5,
                            AmountAvailable = 10,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 4
                        },
                        new
                        {
                            Id = 6,
                            AmountAvailable = 10,
                            BrandId = 1,
                            Category = "Plain",
                            Color = "Green",
                            Description = "A plain shirt",
                            Name = "Shirt",
                            Price = 22.5,
                            SaleReduction = 0,
                            Size = 4
                        });
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.ArticleOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("OrderId");

                    b.ToTable("ArticleOrders");
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nike"
                        });
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsMainPaymentMethod")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVV = "000",
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolderName = "JOSIP KOPRČINA",
                            IsMainPaymentMethod = true,
                            Number = "2222-5555-4444-3333",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CVV = "111",
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolderName = "JOSIP",
                            IsMainPaymentMethod = false,
                            Number = "1111-1111-1111-1111",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CVV = "999",
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolderName = "JOSIP KOPRČINA",
                            IsMainPaymentMethod = false,
                            Number = "9999-8888-7777-6666",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CVV = "222",
                            ExpirationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HolderName = "JOSIP",
                            IsMainPaymentMethod = false,
                            Number = "1111-2222-4444-8888",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "e",
                            FirstName = "Josip",
                            LastName = "Koprcina",
                            Password = "p",
                            Username = "jkoprcina"
                        });
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Address", b =>
                {
                    b.HasOne("ClothesWebShop.Data.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Article", b =>
                {
                    b.HasOne("ClothesWebShop.Data.Models.Brand", "Brand")
                        .WithMany("Articles")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.ArticleOrder", b =>
                {
                    b.HasOne("ClothesWebShop.Data.Models.Article", "Article")
                        .WithMany("ArticleOrders")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesWebShop.Data.Models.Order", "Order")
                        .WithMany("ArticleOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.Order", b =>
                {
                    b.HasOne("ClothesWebShop.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothesWebShop.Data.Models.PaymentMethod", b =>
                {
                    b.HasOne("ClothesWebShop.Data.Models.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
